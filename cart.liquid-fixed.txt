<!-- CORRECTED CART.LIQUID SCRIPT FOR $1000 THRESHOLD -->
<script>
// Newsletter Subscriber Cart Validation for $1000 Maximum Threshold
(function() {
  'use strict';
  
  console.log('üîç Foxx Cart Validation: Script started');
  
  // IMPORTANT: Use your actual Store ID from localStorage
  const STORE_ID = 'fa37fc5c-90ce-44d2-83d8-34835f3b45af';
  const SUBSCRIBER_MAXIMUM_AMOUNT = 100000; // $1000 in cents (Shopify format)
  const STORAGE_KEY = 'foxx_newsletter_' + STORE_ID;
  
  console.log('üîç Using Storage Key:', STORAGE_KEY);
  
  // Function to check if user is subscribed to newsletter
  function isUserSubscribed() {
    try {
      const subscribedEmail = localStorage.getItem(STORAGE_KEY);
      const subscribedTime = localStorage.getItem(STORAGE_KEY + '_time');
      
      console.log('üîç Subscription Check:', {
        subscribedEmail: subscribedEmail,
        subscribedTime: subscribedTime,
        hasEmail: subscribedEmail && subscribedEmail.includes('@'),
        hasTime: !!subscribedTime
      });
      
      return subscribedEmail && 
             subscribedEmail.includes('@') && 
             subscribedTime;
    } catch (error) {
      console.error('‚ùå Could not check subscription status:', error);
      return false;
    }
  }
  
  // Function to get current cart total (Shopify global variable)
  function getCurrentCartTotal() {
    const cartTotal = {{ cart.total_price }};
    console.log('üîç Cart Total (cents):', cartTotal);
    return cartTotal || 0;
  }
  
  // Function to format money (Shopify style)
  function formatMoney(cents) {
    return '$' + (cents / 100).toFixed(2);
  }
  
  // Function to create and show validation message
  function showCartValidationMessage() {
    const currentTotal = getCurrentCartTotal();
    const isSubscribed = isUserSubscribed();
    
    console.log('üîç Validation Check:', {
      currentTotal: currentTotal,
      subscriberMaximum: SUBSCRIBER_MAXIMUM_AMOUNT,
      isSubscribed: isSubscribed,
      isOverThreshold: currentTotal > SUBSCRIBER_MAXIMUM_AMOUNT,
      isBelowThreshold: currentTotal <= SUBSCRIBER_MAXIMUM_AMOUNT
    });
    
    // Remove existing message first
    const existingMessage = document.getElementById('subscriber-cart-validation');
    if (existingMessage) {
      existingMessage.remove();
    }
    
    // Only show if user is subscribed
    if (!isSubscribed) {
      console.log('‚ÑπÔ∏è User not subscribed - no validation message needed');
      return;
    }
    
    let messageHtml = '';
    
    if (currentTotal > SUBSCRIBER_MAXIMUM_AMOUNT) {
      // Cart exceeds $1000 - show warning that discount won't work
      const excess = currentTotal - SUBSCRIBER_MAXIMUM_AMOUNT;
      messageHtml = `
        <div id="subscriber-cart-validation" style="
          background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);
          color: white;
          padding: 16px;
          margin: 16px 0;
          border-radius: 12px;
          border-left: 4px solid #dc2626;
          box-shadow: 0 4px 12px rgba(220, 38, 38, 0.15);
          position: relative;
          animation: slideIn 0.5s ease-out;
          z-index: 1000;
        ">
          <div style="display: flex; align-items: center; gap: 12px;">
            <div style="
              background: rgba(255, 255, 255, 0.2);
              border-radius: 50%;
              width: 40px;
              height: 40px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 18px;
            ">‚ö†Ô∏è</div>
            <div style="flex: 1;">
              <h4 style="margin: 0 0 4px 0; font-size: 16px; font-weight: 600;">
                Cart Total Exceeds Discount Limit
              </h4>
              <p style="margin: 0; font-size: 14px; opacity: 0.9;">
                Your cart total is ${formatMoney(currentTotal)}. Newsletter subscriber discount codes (WELCOME50) are only valid for orders up to $1,000.
              </p>
              <p style="margin: 4px 0 0 0; font-size: 13px; opacity: 0.8;">
                Remove ${formatMoney(excess)} worth of items to use your <strong>WELCOME50</strong> discount code.
              </p>
            </div>
            <button onclick="closeCartValidation()" style="
              background: rgba(255, 255, 255, 0.2);
              border: none;
              color: white;
              border-radius: 50%;
              width: 28px;
              height: 28px;
              cursor: pointer;
              font-size: 16px;
              display: flex;
              align-items: center;
              justify-content: center;
            ">√ó</button>
          </div>
          <div style="
            margin-top: 12px;
            padding-top: 12px;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
            font-size: 12px;
            opacity: 0.8;
          ">
            ‚ùå Discount code will not work at checkout with current total
          </div>
        </div>
      `;
    } else {
      // Cart is within $1000 limit - show eligible message
      const remaining = SUBSCRIBER_MAXIMUM_AMOUNT - currentTotal;
      messageHtml = `
        <div id="subscriber-cart-validation" style="
          background: linear-gradient(135deg, #059669 0%, #10b981 100%);
          color: white;
          padding: 16px;
          margin: 16px 0;
          border-radius: 12px;
          border-left: 4px solid #059669;
          box-shadow: 0 4px 12px rgba(5, 150, 105, 0.15);
          position: relative;
          animation: slideIn 0.5s ease-out;
          z-index: 1000;
        ">
          <div style="display: flex; align-items: center; gap: 12px;">
            <div style="
              background: rgba(255, 255, 255, 0.2);
              border-radius: 50%;
              width: 40px;
              height: 40px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 18px;
            ">‚úÖ</div>
            <div style="flex: 1;">
              <h4 style="margin: 0 0 4px 0; font-size: 16px; font-weight: 600;">
                Discount Eligible!
              </h4>
              <p style="margin: 0; font-size: 14px; opacity: 0.9;">
                Your cart total is ${formatMoney(currentTotal)}. You can use your newsletter subscriber discount at checkout.
              </p>
              <p style="margin: 4px 0 0 0; font-size: 13px; opacity: 0.8;">
                You can add up to ${formatMoney(remaining)} more and still use your discount.
              </p>
            </div>
            <button onclick="closeCartValidation()" style="
              background: rgba(255, 255, 255, 0.2);
              border: none;
              color: white;
              border-radius: 50%;
              width: 28px;
              height: 28px;
              cursor: pointer;
              font-size: 16px;
              display: flex;
              align-items: center;
              justify-content: center;
            ">√ó</button>
          </div>
          <div style="
            margin-top: 12px;
            padding-top: 12px;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
            font-size: 12px;
            opacity: 0.8;
          ">
            ‚úì Proceed to checkout to apply your discount code
          </div>
        </div>
      `;
    }
    
    // Insert validation message
    const cartForm = document.querySelector('.cart, #enhanced-cart-form, form[action="/cart"], .cart-drawer__items');
    if (cartForm) {
      console.log('‚úÖ Inserting validation message');
      cartForm.insertAdjacentHTML('afterbegin', messageHtml);
    } else {
      console.error('‚ùå Could not find cart container to insert validation message');
    }
    
    console.log('‚úÖ Cart validation message shown');
  }
  
  // Function to close the validation message
  window.closeCartValidation = function() {
    const message = document.getElementById('subscriber-cart-validation');
    if (message) {
      message.style.animation = 'slideOut 0.3s ease-in forwards';
      setTimeout(() => {
        message.remove();
        console.log('‚úÖ Validation message removed');
      }, 300);
    }
  };
  
  // CSS animations
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideIn {
      from { transform: translateY(-10px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    @keyframes slideOut {
      from { transform: translateY(0); opacity: 1; }
      to { transform: translateY(-10px); opacity: 0; }
    }
  `;
  document.head.appendChild(style);
  
  // Initialize when DOM is ready
  function init() {
    console.log('üöÄ Initializing cart validation system');
    
    // Show initial validation message
    setTimeout(() => {
      showCartValidationMessage();
    }, 1000);
    
    // Listen for cart updates
    document.addEventListener('change', function(e) {
      if (e.target.matches('input[name="updates[]"]') || 
          e.target.matches('.js-qty-input') ||
          e.target.matches('[data-quantity-input]')) {
        console.log('üîÑ Cart quantity changed, rechecking validation');
        setTimeout(() => {
          showCartValidationMessage();
        }, 500);
      }
    });
    
    // Listen for cart form submissions
    document.addEventListener('submit', function(e) {
      if (e.target.matches('form[action="/cart"]') || 
          e.target.matches('.cart') ||
          e.target.id === 'enhanced-cart-form') {
        console.log('üîÑ Cart form submitted, will recheck validation after page reload');
      }
    });
  }
  
  // Start when page loads
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
  
})();
</script>